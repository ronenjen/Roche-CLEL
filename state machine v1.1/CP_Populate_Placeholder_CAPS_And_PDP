using Biosero.DataServices.Client;
using Biosero.Orchestrator.WorkflowService;
using Newtonsoft.Json;
using System;
using System.Threading;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Text;
using System.Linq;



namespace Biosero.Scripting
{
    public class CP_Populate_Placeholder_CAPS_And_PDP
    {
        public async Task RunAsync(DataServicesClient client, WorkflowContext context, CancellationToken cancellationToken)
        {
            string OrderNumber = context.GetGlobalVariableValue<string>("Input.OrderId");
            int TotalSources = context.GetGlobalVariableValue<int>("Total Sources");

            string CapsPlaceholderBarcodes = "";
            string PDPPlaceholderBarcodes = "";
            DateTime currentDate = DateTime.Now;
            int CurrentDay = currentDate.Day;


            // Cap  = for each source, 1 Cap Holder

            for (int i = 1; i <= (TotalSources); i++)
            {
                CapsPlaceholderBarcodes = CapsPlaceholderBarcodes + OrderNumber.ToString() + CurrentDay.ToString() + "CAP" + i + ",";
            }
            CapsPlaceholderBarcodes = CapsPlaceholderBarcodes.TrimEnd(',');


            await context.AddOrUpdateGlobalVariableAsync("CapsPlaceholderBarcodes", CapsPlaceholderBarcodes);


            // PDP  = for each source, 1 PDP 

            for (int i = 1; i <= (TotalSources); i++)
            {
                PDPPlaceholderBarcodes = PDPPlaceholderBarcodes + OrderNumber.ToString() + CurrentDay.ToString() + "PDP" + i + ",";
            }
            PDPPlaceholderBarcodes = PDPPlaceholderBarcodes.TrimEnd(',');
            await context.AddOrUpdateGlobalVariableAsync("PDPPlaceholderBarcodes", PDPPlaceholderBarcodes);



            Serilog.Log.Information("CapsPlaceholderBarcodes= {CapsPlaceholderBarcodes}", CapsPlaceholderBarcodes.ToString());
            Serilog.Log.Information("PDPPlaceholderBarcodes= {PDPPlaceholderBarcodes}", PDPPlaceholderBarcodes.ToString());


        }
    }
}
