using Biosero.DataServices.Client;
using Biosero.Orchestrator.WorkflowService;
using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Text.Json;

/*
Script written by Ronen Peleg (ronenpeleg@biosero.com)

Description:
Look for any inventory or Tips events for the current day. Add TRUE or FALSE accordingly
*/

namespace Biosero.Scripting
{
    public class AreOrdersRunningInOrchestrator
    {
        public async Task RunAsync(DataServicesClient client, WorkflowContext context, CancellationToken cancellationToken)
        {


            var orders = await client.GetOrdersAsync();
            int CountOrders = orders.Count();
            Console.WriteLine($"there are currently  {CountOrders} running");

            orders = orders.Where(x => x.StatusDetails == "Running..." && x.ParentIdentifier==null).ToArray();

             CountOrders = orders.Count();
            Console.WriteLine($"there are currently  {CountOrders} running");


            await context.AddOrUpdateGlobalVariableAsync("Number Of Running Orders", CountOrders);

            foreach (var order in orders)
            {
                string OrderId = order.Identifier;

                // Assuming order.InputParameters is already a collection of Parameters
                foreach (var param in order.InputParameters)
                {
                    if (param.Name == "OrderId")
                    {
                        string orderIdValue = param.Value.ToString();
                        Console.WriteLine($"OrderId: {orderIdValue}");
                    }
                }
            }

            Console.WriteLine($" there are currently  {CountOrders} running" + Environment.NewLine);
        }

        public class OrderInputParam
        {
            public string name { get; set; }
            public string value { get; set; }
            public string valueType { get; set; }
            public string defaultValue { get; set; }
            public string[] tags { get; set; }
        }
    }
}