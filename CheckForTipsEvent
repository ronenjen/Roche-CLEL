using Biosero.DataServices.Client;
using Biosero.Orchestrator.WorkflowService;
using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

/*
Script written by Ronen Peleg (ronenpeleg@biosero.com)

Description:
Look for any inventory or Tips events for the current day. Add TRUE or FALSE accordingly
Text
*/

namespace Biosero.Scripting
{
    public class CheckForTipsEvent
    {
        public async Task RunAsync(DataServicesClient client, WorkflowContext context, CancellationToken cancellationToken)
        {
            // midnight today at local location
            var midnight = DateTime.Now.Date;

            // convert to utc since Events.CreatedDateUtc is stored in UTC timezone
            var createdFrom = midnight.ToUniversalTime();

            //get all Events from DS with a topic = "Biosero.Scripting.TipsSentEvent"
            var events = await client.GetEventsAsync(topic: "Biosero.Scripting.TipsSentEvent", createdFrom: createdFrom);

            // Add to an array all those events where actor = "Roche-Orchestrator"
            events = events.Where(x => x.ActorId == "Roche-Orchestrator").ToArray();

            //If any found, add as TRUE to DS variable "TipsEventsFound" FALSE otherwise
            await context.AddOrUpdateGlobalVariableAsync("TipsEventsFound", events.Any());


            Serilog.Log.Information("Tips Events Found = {TipsEventsFound}", events.Any());

            //get all Events from DS with a topic = "Biosero.Scripting.InventorySentEvent"
            events = await client.GetEventsAsync(topic: "Biosero.Scripting.InventorySentEvent", createdFrom: createdFrom);

            // Add to an array all those events where actor = "Roche-Orchestrator"
            events = events.Where(x => x.ActorId == "Roche-Orchestrator").ToArray();

            //If any found, add as TRUE to DS variable "InventoryEventsFound" FALSE otherwise
            await context.AddOrUpdateGlobalVariableAsync("InventoryEventsFound", events.Any());


            Serilog.Log.Information("Inventory Events Found= {InventoryEventsFound}", events.Any());
        }
    }
}
